#!/usr/bin/env bash
# Get full logs under Cloudwatch log group
# Usage: get-full-cloudwatch-log <log-group-name> <log-stream-name> <output-file> <AWS_REGION> <AWS_PROFILE>

IFS=$'\n\t'

LOG_GROUP_NAME=$1
LOG_STREAM_NAME=$2
OUTPUT_FILE=$3
REGION=$4
PROFILE=$5

rm -f ${OUTPUT_FILE}

jq_query='.events[] | [(.timestamp / 1000 | strftime("%Y-%m-%d %H:%M:%S UTC")), .message] | @csv'

result=$(aws logs get-log-events \
    --start-from-head \
    --log-group-name="${LOG_GROUP_NAME}" \
    --log-stream-name="${LOG_STREAM_NAME}" \
    --profile ${PROFILE} \
    --region=${REGION})
echo ${result} | jq -r ${jq_query} >> ${OUTPUT_FILE}

nextToken=$(echo $result | jq -r .nextForwardToken)
while [ -n "$nextToken" ]; do
    result=$(aws logs get-log-events \
        --start-from-head \
        --log-group-name="${LOG_GROUP_NAME}" \
        --log-stream-name="${LOG_STREAM_NAME}" \
        --region=${REGION} \
        --profile=${PROFILE} \
        --next-token="${nextToken}")

    if [[ $(echo ${result} | jq -e '.events == []') == "true" ]]; then
        echo "Cloudwatch response with empty events found -> exiting."
        exit
    fi

    echo ${result} | jq -r ${jq_query} >> ${OUTPUT_FILE}

    nextToken=$(echo ${result} | jq -r .nextForwardToken)
done
