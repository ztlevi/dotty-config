#!/usr/bin/env zsh
# Usage:
# unison-sync <local-workplace> <username>@<remote-hostname> <remote-workplace>
# e.g. unison-sync /workplace ztlevi@kuro /workplace
# You need to remove local or remote ~/.unison cache if failed
if [[ $# -ne 3 ]]; then
    echo-fail "Need 3 argments but only have $#"
    echo-info "Usage: unison-sync <local-workplace> <username>@<remote-hostname> <remote-workplace>"
    return 0
fi
local remote_arg="ssh://$2/$3"

(
    if ! pgrep unison >/dev/null; then
        while :; do
            echo "Kill local and remote unison process... " $(date)
            timeout 5s ssh $2 "killall unison" || true
            timeout 5s killall unison || true
            timeout 5s killall unison-fsmonitor || true
            echo "Starting unison process... " $(date)
            unison -ui text default.prf $1 $remote_arg
            echo "Unison process exited.  Sleeping before restarting.  ^C to exit. " $(date)
            sleep 30
        done
        echo "unison is running..."
    fi
) &
pid=$! # Capture the background process ID

cleanup_unison() {
    echo "Cleaning up unison processes"
    kill "$pid" 2>/dev/null || true
    timeout 5s killall unison || true
    timeout 5s killall unison-fsmonitor || true
}

# Set up a trap to call cleanup on EXIT or INTERRUPT (Ctrl+C)
trap cleanup_unison EXIT INT TERM

# Timeout for 16 h  to kill the process
sleep 10s && kill "$pid" 2>/dev/null &

# Wait for the background process to complete
wait "$pid"
